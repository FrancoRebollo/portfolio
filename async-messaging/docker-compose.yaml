version: "3.8"

services:
  async-messaging-db:
    image: postgres:15
    container_name: async-messaging-db
    environment:
      POSTGRES_USER: async_messaging
      POSTGRES_PASSWORD: async_messaging
      POSTGRES_DB: async_messaging_db
    ports:
      - "5435:5432"
    volumes:
      - async-messaging-pgdata:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U async_messaging"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  async-messaging-svc:
    build:
      context: ./async-messaging-svc
      dockerfile: ./cmd/apis/Dockerfile
    container_name: async-messaging-svc
    depends_on:
      async-messaging-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./async-messaging-svc/.env
    ports:
      - "3003:3003"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "/app/server", "--healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 90s

 


volumes:
  async-messaging-pgdata:

networks:
  backend:
    driver: bridge
